{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"MetaSolverStrategy": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"code": {
						"type": "string"
					},
					"problemTypeId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"code",
					"problemTypeId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_MetaSolverStrategyInput.Exclude_keyofMetaSolverStrategyInput.problemTypeId__": {
				"properties": {
					"code": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"code",
					"name"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_MetaSolverStrategyInput.problemTypeId_": {
				"$ref": "#/components/schemas/Pick_MetaSolverStrategyInput.Exclude_keyofMetaSolverStrategyInput.problemTypeId__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"MetaSolverStrategyResponse": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"MetaSolverStrategyInput": {
				"properties": {
					"code": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"required": [
					"code",
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UpdateStrategyInput": {
				"properties": {
					"code": {
						"type": "string"
					},
					"name": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ExecuteStrategyInput": {
				"properties": {
					"problemId": {
						"type": "string"
					}
				},
				"required": [
					"problemId"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "interpreter",
		"version": "1.0.0",
		"contact": {}
	},
	"paths": {
		"/strategies": {
			"post": {
				"operationId": "SaveStrategy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaSolverStrategy"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Omit_MetaSolverStrategyInput.problemTypeId_"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "ListStrategies",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/MetaSolverStrategy"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": []
			}
		},
		"/strategies/{id}": {
			"patch": {
				"operationId": "UpdateStrategy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"allOf": [
										{
											"$ref": "#/components/schemas/MetaSolverStrategyResponse"
										},
										{
											"$ref": "#/components/schemas/MetaSolverStrategyInput"
										}
									]
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UpdateStrategyInput"
							}
						}
					}
				}
			},
			"get": {
				"operationId": "GetStrategy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/MetaSolverStrategy"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/strategies/{id}/execute": {
			"post": {
				"operationId": "ExecuteStrategy",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"result": {}
									},
									"required": [
										"result"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ExecuteStrategyInput"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}